/**
 * This SPL namespace contains all functions and operators that are required to integrate with Kafka message brokers.
 *
 * + Compatibility
 * This toolkit is compatible with Kafka brokers version 0.10.2 and later including 2.6.x.
 * This toolkit contains the Kafka client library version 2.5.1.
 * 
 * * To use Kafka transactions with the `KafkaProducer`, the Kafka server must be at version 0.11 or higher.
 * * To use Zstandard compression with the `KafkaProducer`, the Kafka server must be at version 2.1 or higher.
 * * To use the `guaranteeOrdering: true;` parameter of the `KafkaProducer`, the Kafka server must be at version 0.11 or higher.
 * * To configure the `KafkaConsumer` operator as a static consumer group member, the Kafka server must be at version 2.3 or higher.
 * * To use the `KafkaConsumer` operator with Kafka 0.10, `isolation.level=read_uncommitted` must be configured.
 * 
 * Additional information about restrictions can be found in parameter descriptions for the specific operators.
 *
 * + Configuration
 *
 * The operators use Kafka's Producer or Consumer API. As a consequence, you can specify all properties for the APIs to control
 * the behavior of the operators. The producer configuration for Apache Kafka 2.5 can be found in the
 * [https://kafka.apache.org/25/documentation/#producerconfigs|producer configs section of the Apache Kafka 2.5 documentation],
 * the configs for the Apache Kafka 2.5 consumer can be found in the
 * [https://kafka.apache.org/25/documentation/#consumerconfigs|consumer configs section of the Apache Kafka 2.5 documentation].
 *
 * Properties can be specified in different ways:
 * 
 * * as an Application configuration - you must specify the name of the App Config in the **appConfigName** parameter
 * * in a property file - you must specify the filename in the **propertiesFile** parameter
 * * operator parameters **clientId** and **groupId** (groupId for the KafkaConsumer operator only)
 *
 * Kafka properties can be specified by using these mechanisms simultaneously. The precedence is
 * 
 * * parameter
 * * property file
 * * application configuration. For Streams version 4.x users: Please note that an application configuration with 
 *   instance scope takes precedence over a configuration with same name at domain level.
 * 
 */

namespace com.ibm.streamsx.kafka;
