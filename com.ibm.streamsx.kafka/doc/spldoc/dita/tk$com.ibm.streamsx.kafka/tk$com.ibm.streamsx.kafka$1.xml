<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">

<reference id="spldoc_page">
<title>Developing and running applications that use the Messaging Toolkit</title>
<refbody>
<section>
<p>
<xref href="../toolkits/toolkits.xml">IBMStreams com.ibm.streamsx.kafka Toolkit</xref> &gt; <xref href="tk$com.ibm.streamsx.kafka.xml">com.ibm.streamsx.kafka 5.1.1</xref> &gt; Developing and running applications that use the Messaging Toolkit</p>
</section>

<section>
<p>To create applications that use the Messaging Toolkit, you must configure either Streams Studio or the SPL compiler to be aware of the location of the toolkit. 
</p>
</section>
<section>
<title>Before you begin
</title>
<p>
<ul>
<li> Install IBM InfoSphere Streams.  Configure the product environment variables by entering the following command: 
<codeblock>
<![CDATA[  source product-installation-root-directory/4.0.0.0/bin/streamsprofile.sh
]]></codeblock>
</li>
<li> Install a supported version of WebSphere MQ Client, Apache ActiveMQ and XMS client on the same machine as InfoSphere Streams.       WebSphere MQ Server might or might not be on the same machine.  
<p>  For Kafka and MQTT, the toolkit ships with a set of required clients, and therefore this configuration   is not needed.
</p>
<p>
<ul>
<li> Apache ActiveMQ
<ul>
<li> The <tt>JMSSource</tt> and <tt>JMSSink</tt> operators support Apache ActiveMQ 5.7 and up.
<ul>
<li> The Apache ActiveMQ libraries must be installed on same machine as IBM InfoSphere Streams         because the <tt>JMSSink</tt> and <tt>JMSSource</tt> operators require the libraries that are installed with IBM InfoSphere Streams.         However, the ActiveMQ instance to which a message is sent can be a different machine.          You must set the <b>STREAMS_MESSAGING_AMQ_HOME</b> environment variable to the location where Apache ActiveMQ is installed. For example: 
<codeblock>
<![CDATA[  export STREAMS_MESSAGING_AMQ_HOME="/home/streamsuser/ApacheActiveMQ"
]]></codeblock>
</li>
</ul></li>
</ul></li>
<li> WebSphere MQ Server
<ul>
<li> The <tt>JMSSource</tt>, <tt>JMSSink</tt>, <tt>XMSSource</tt> and <tt>XMSSink</tt> operators support WebSphere MQ v7.5 and v8.0.</li>
<li> The <tt>XMSSource</tt> and <tt>XMSSink</tt> operators require that the IBM Message Service Client (XMS) for C/C++ is installed.
<ul>
<li> You can download the IBM Message Service client for C/C++ from IBM Support Portal          (<xref format= "html" href="http://www.ibm.com/support/docview.wss?uid=swg24007092">http://www.ibm.com/support/docview.wss?uid=swg24007092</xref>).</li>
<li> The XMS client must be installed on the hosts where the XMS operators can be run.    </li>
</ul>      You must set the <b>XMS_HOME</b> environment variable to the installation location of XMS Client.</li>
<li> The <tt>JMSSource</tt> and <tt>JMSSink</tt> operators require the WebSphere MQ Client libraries for Java if the messaging provider is WebSphere MQ.
<ul>
<li> The WebSphere MQ Client libraries must be installed on the hosts where the JMS operators can be run.         You must set the <b>STREAMS_MESSAGING_WMQ_HOME</b> environment variable to the location where WebSphere MQ is installed.          For example:
<codeblock>
<![CDATA[  export STREAMS_MESSAGING_WMQ_HOME="/opt/mqm"
]]></codeblock>
</li>
</ul></li>
</ul></li>
</ul>
</p></li>
</ul>
</p>
</section>
<section>
<title>About this task
</title>
<p>After the location of the toolkit is communicated to the compiler, the SPL artifacts that are specified in the toolkit can be used by an application. The application can include a use directive to bring the necessary namespaces into scope. Alternatively, you can fully qualify the operators that are provided by toolkit with their namespaces as prefixes.
</p>
</section>
<section>
<title>Procedure
</title>
<p>
<ol>
<li> Review the list of restrictions for the InfoSphere Streams specialized toolkits in the product documentation.    For example, the <tt>XMSSource</tt> and <tt>XMSSink</tt> operators are not supported on POWER7 or POWER 8 systems. </li>
<li> Verify that the appropriate environment variables are set for the messaging systems that you use.
<ul>
<li> If you use <tt>JMSSink</tt> or <tt>JMSSource</tt> operators to connect to WebSphere MQ or Apache ActiveMQ systems,      set <b>STREAMS_MESSAGING_WMQ_HOME</b> or <b>STREAMS_MESSAGING_AMQ_HOME</b> respectively.</li>
<li> If you use <tt>XMSSink</tt> or <tt>XMSSource</tt> operators to connect to WebSphere MQ messaging systems,      set <b>XMS_HOME</b>, <b>MQ_HOME</b>, and <b>LD_LIBRARY_PATH</b>.</li>
</ul></li>
<li> Configure the SPL compiler to find the toolkit root directory. Use one of the following methods:
<ul>
<li> Set the <b>STREAMS_SPLPATH</b> environment variable to the root directory of a toolkit or multiple toolkits (with : as a separator).     For example:
<codeblock>
<![CDATA[  export STREAMS_SPLPATH=$STREAMS_INSTALL/toolkits/com.ibm.streamsx.messaging
]]></codeblock>
</li>
<li> Specify the <b>-t</b> or <b>--spl-path</b> command parameter when you run the <b>sc</b> command. For example:
<codeblock>
<![CDATA[  sc -t $STREAMS_INSTALL/toolkits/com.ibm.streamsx.messaging -M MyMain
]]></codeblock>
    where MyMain is the name of the SPL main composite.     <b>Note</b>: These command parameters override the <b>STREAMS_SPLPATH</b> environment variable.</li>
<li> Add the toolkit location in InfoSphere Streams Studio.</li>
</ul></li>
<li> Develop your application. To avoid the need to fully qualify the operators, add a use directive in your application. 
<ul>
<li> For example, you can add the following clause in your SPL source file:
<codeblock>
<![CDATA[  use com.ibm.streamsx.messaging.jms::*;
  use com.ibm.streamsx.messaging.mqtt::*;
  use com.ibm.streamsx.messaging.xms::*;
  use com.ibm.streamsx.messaging.kafka::*;
]]></codeblock>
    You can also specify a use clause for individual operators by replacing the asterisk (*) with the operator name. For example: 
<codeblock>
<![CDATA[  use com.ibm.streamsx.messaging.jms::JMSSink;
  use com.ibm.streamsx.messaging.mqtt::MQTTSink; 
  use com.ibm.streamsx.messaging.xms::XMSSource;
  use com.ibm.streamsx.messaging.kafka::KafkaConsumer;
]]></codeblock>
</li>
</ul></li>
<li> Build your application.  You can use the <b>sc</b> command or Streams Studio.  </li>
<li> Start the InfoSphere Streams instance. </li>
<li> Run the application. You can submit the application as a job by using the <b>streamtool submitjob</b> command or by using Streams Studio. </li>
</ol>
</p>
</section>
</refbody>
</reference>
