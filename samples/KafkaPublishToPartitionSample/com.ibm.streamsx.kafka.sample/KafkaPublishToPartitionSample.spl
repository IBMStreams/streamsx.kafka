namespace com.ibm.streamsx.kafka.sample;

use com.ibm.streamsx.kafka::KafkaConsumer ;
use com.ibm.streamsx.kafka::KafkaProducer ;

/*
 * This is a very basic sample demonstrating how to use the KafkaConsumer 
 * and KafkaProducer operators.
 */
composite KafkaPublishToPartitionSample
{
    type
        Message = rstring key, rstring message ;
    graph
        (stream<Message> KafkaConsumer_1_out0) as KafkaConsumer_1 =
            KafkaConsumer()
        {
            param
                topic : "test" ;
                partition : 1;
                propertiesFile : "etc/consumer.properties" ;
        }

        () as Custom_2 = Custom(KafkaConsumer_1_out0)
        {
            logic
                onTuple KafkaConsumer_1_out0 :
                {
                    println(KafkaConsumer_1_out0) ;
                }

        }

        () as KafkaProducer_3 = KafkaProducer(Beacon_4_out0)
        {
            param
                topic : "test" ;
                partitionAttribute : partition;
                propertiesFile : "etc/producer.properties" ;
        }

        (stream<Message, tuple<int32 partition>> Beacon_4_out0) as Beacon_4 = Beacon()
        {
            param
                iterations : 10u ;
                initDelay : 5f ;
            output
                Beacon_4_out0 : key = "key_" +(rstring) IterationCount(),
                    message = "msg_" +(rstring) IterationCount(),
                    partition = 1;
        }

}
